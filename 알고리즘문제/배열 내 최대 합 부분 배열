문제 1: 배열 내 최대 합 부분 배열
정수 배열이 주어질 때, 연속된 부분 배열의 합 중 최대값을 구하세요.

입력 예시
[-2, 1, -3, 4, -1, 2, 1, -5, 4]

출력 예시
6
(부분 배열 [4, -1, 2, 1]의 합이 6으로 최대)


코딩테스트 문제와 풀이를 준비해드릴게요. 특정한 문제 유형이나 언어가 있다면 알려주세요. 일반적인 코딩테스트 문제를 예로 드리면 아래와 같습니다.

문제 1: 배열 내 최대 합 부분 배열
정수 배열이 주어질 때, 연속된 부분 배열의 합 중 최대값을 구하세요.

입력 예시
[-2, 1, -3, 4, -1, 2, 1, -5, 4]

출력 예시
6
(부분 배열 [4, -1, 2, 1]의 합이 6으로 최대)

풀이 1: 카데인 알고리즘
이 문제는 카데인 알고리즘을 사용하면 효율적으로 풀 수 있습니다. 카데인 알고리즘은 현재 위치까지의 최대 부분 배열 합을 저장하고, 그 다음 위치에서 갱신해 가는 방식으로 동작합니다.

python
코드 복사
def max_subarray_sum(nums):
    current_sum = max_sum = nums[0]
    
    for num in nums[1:]:
        # 현재 숫자를 더한 값과 현재 숫자 중 더 큰 값을 선택
        current_sum = max(num, current_sum + num)
        # 최대 부분 배열 합 갱신
        max_sum = max(max_sum, current_sum)
    
    return max_sum

# 테스트
nums = [-2, 1, -3, 4, -1, 2, 1, -5, 4]
print(max_subarray_sum(nums))  # 출력: 6
설명:

current_sum은 현재 위치까지의 최대 부분 배열 합을 저장하고, max_sum은 최종 최대 값을 저장합니다.
각 요소마다 current_sum을 갱신하고, 그 값이 max_sum보다 크면 max_sum을 업데이트합니다.
