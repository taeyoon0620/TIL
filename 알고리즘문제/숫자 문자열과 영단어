문제: 숫자 문자열과 영단어
프로그래밍 언어로 숫자 문자열을 숫자로 변환하는 문제입니다. 숫자가 영단어로 주어졌을 때, 이를 실제 숫자로 변환하는 문제입니다.

문제 설명
숫자를 나타내는 문자열 s가 주어집니다. s는 아래와 같은 규칙으로 구성됩니다:

숫자는 0부터 9까지 한 자리 숫자로 나타낼 수 있습니다.
또한 숫자를 영단어로 표현한 "zero", "one", "two", ..., "nine"로 나타낼 수도 있습니다.
예를 들어 s가 "one4seveneight"이라면, 이를 "1478"로 변환해야 합니다.
제약사항

문자열 s의 길이는 1 이상 50 이하입니다.
s는 숫자나 영단어로 구성되어 있으며, 공백이나 특수문자는 포함되지 않습니다.

s = "one4seveneight"

1478
문제 풀이
이 문제는 주어진 문자열 s에서 영단어를 숫자로 치환하는 작업입니다. 다음과 같은 접근 방법을 사용하면 됩니다.

숫자를 나타내는 영단어와 해당 숫자를 매핑한 딕셔너리를 정의합니다.
문자열 s에서 각 영단어를 찾아서 숫자로 변환합니다.
변환된 문자열을 최종적으로 숫자로 변환해 반환합니다.

def solution(s):
    # 영단어와 숫자의 매핑
    num_dict = {
        "zero": "0", "one": "1", "two": "2", "three": "3", "four": "4",
        "five": "5", "six": "6", "seven": "7", "eight": "8", "nine": "9"
    }
    
    # 영단어를 숫자로 치환
    for word, num in num_dict.items():
        s = s.replace(word, num)  # 영단어를 숫자로 치환
    
    # 변환된 문자열을 정수로 반환
    return int(s)

# 테스트
s = "one4seveneight"
print(solution(s))  # 출력: 1478

설명
num_dict 딕셔너리를 만들어 숫자 영단어와 숫자를 매핑합니다.
for 루프를 이용해 문자열 s에서 각 영단어를 숫자로 치환합니다. replace 메서드를 이용하여 해당 영단어가 문자열 내에서 모두 숫자로 바뀌도록 합니다.
최종적으로 치환이 완료된 문자열 s를 정수로 변환해 반환합니다.
추가 예시
입력: "23four5six7"

출력: 234567

입력: "2three45sixseven"

출력: 234567

위와 같은 방식으로 문제를 해결할 수 있습니다. 이 풀이의 시간 복잡도는 문자열 길이에 비례하므로 효율적입니다.
