애너그램은 두 문자열이 같은 문자로 이루어져 있으며, 문자의 순서만 다른 경우를 말합니다. 예를 들어, "listen"과 "silent"는 애너그램입니다.

import java.util.Arrays;

public class AnagramChecker {
    // 두 문자열이 애너그램인지 확인하는 메소드
    public static boolean areAnagrams(String str1, String str2) {
        // 문자열 길이가 다르면 애너그램이 아님
        if (str1.length() != str2.length()) {
            return false;
        }
        
        // 두 문자열을 모두 소문자로 변환하고 배열로 정렬
        char[] charArray1 = str1.toLowerCase().toCharArray();
        char[] charArray2 = str2.toLowerCase().toCharArray();
        
        Arrays.sort(charArray1);
        Arrays.sort(charArray2);
        
        // 정렬된 배열을 비교
        return Arrays.equals(charArray1, charArray2);
    }

    public static void main(String[] args) {
        String str1 = "listen";
        String str2 = "silent";

        if (areAnagrams(str1, str2)) {
            System.out.println(str1 + "과(와) " + str2 + "은(는) 애너그램입니다.");
        } else {
            System.out.println(str1 + "과(와) " + str2 + "은(는) 애너그램이 아닙니다.");
        }
    }
}


설명
문자열 비교: 두 문자열의 길이가 다르면 바로 false를 반환합니다.
정렬 후 비교: 문자열을 각각 배열로 변환한 후, 알파벳 순으로 정렬하여 비교합니다.
대소문자 처리: 대소문자를 구분하지 않기 위해 모두 소문자로 변환합니다.
시간 복잡도: 정렬하는 부분이 O(n log n)의 시간 복잡도를 가집니다.
